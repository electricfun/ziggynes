const OpcodeEnum = @import("enum.zig").OpcodeEnum;
const AddressingModeEnum = @import("enum.zig").AddressingModeEnum;

pub const Opcode = struct {
    name: OpcodeEnum,
    addressing_mode: AddressingModeEnum,
    code: u8,
    size: u16,
    cycles: u8,

    pub fn init(name: OpcodeEnum, code: u8, addressing_mode: AddressingModeEnum, size: u16, cycles: u8) Opcode {
        return Opcode{
            .name = name,
            .code = code,
            .addressing_mode = addressing_mode,
            .size = size,
            .cycles = cycles,
        };
    }
};

pub fn generate_opcodes() [0x100]Opcode {
    var opcodes: [0x100]Opcode = undefined;

    opcodes[0x00] = Opcode.init(OpcodeEnum.BRK, 0x00, AddressingModeEnum.Implicit, 1, 7);
    opcodes[0x01] = Opcode.init(OpcodeEnum.ORA, 0x01, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x02] = Opcode.init(OpcodeEnum.KIL, 0x02, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x03] = Opcode.init(OpcodeEnum.SLO, 0x03, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0x04] = Opcode.init(OpcodeEnum.NOP, 0x04, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x05] = Opcode.init(OpcodeEnum.ORA, 0x05, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x06] = Opcode.init(OpcodeEnum.ASL, 0x06, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x07] = Opcode.init(OpcodeEnum.SLO, 0x07, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x08] = Opcode.init(OpcodeEnum.PHP, 0x08, AddressingModeEnum.Implicit, 1, 3);
    opcodes[0x09] = Opcode.init(OpcodeEnum.ORA, 0x09, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x0A] = Opcode.init(OpcodeEnum.ASL, 0x0A, AddressingModeEnum.Accumulator, 1, 2);
    opcodes[0x0B] = Opcode.init(OpcodeEnum.AAC, 0x0B, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x0C] = Opcode.init(OpcodeEnum.NOP, 0x0C, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x0D] = Opcode.init(OpcodeEnum.ORA, 0x0D, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x0E] = Opcode.init(OpcodeEnum.ASL, 0x0E, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x0F] = Opcode.init(OpcodeEnum.SLO, 0x0F, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x10] = Opcode.init(OpcodeEnum.BPL, 0x10, AddressingModeEnum.Relative, 2, 2);
    opcodes[0x11] = Opcode.init(OpcodeEnum.ORA, 0x11, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0x12] = Opcode.init(OpcodeEnum.KIL, 0x12, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x13] = Opcode.init(OpcodeEnum.SLO, 0x13, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0x14] = Opcode.init(OpcodeEnum.NOP, 0x14, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x15] = Opcode.init(OpcodeEnum.ORA, 0x15, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x16] = Opcode.init(OpcodeEnum.ASL, 0x16, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x17] = Opcode.init(OpcodeEnum.SLO, 0x17, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x18] = Opcode.init(OpcodeEnum.CLC, 0x18, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x19] = Opcode.init(OpcodeEnum.ORA, 0x19, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0x1A] = Opcode.init(OpcodeEnum.NOP, 0x1A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x1B] = Opcode.init(OpcodeEnum.SLO, 0x1B, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0x1C] = Opcode.init(OpcodeEnum.NOP, 0x1C, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x1D] = Opcode.init(OpcodeEnum.ORA, 0x1D, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x1E] = Opcode.init(OpcodeEnum.ASL, 0x1E, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x1F] = Opcode.init(OpcodeEnum.SLO, 0x1F, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x20] = Opcode.init(OpcodeEnum.JSR, 0x20, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x21] = Opcode.init(OpcodeEnum.AND, 0x21, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x22] = Opcode.init(OpcodeEnum.KIL, 0x22, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x23] = Opcode.init(OpcodeEnum.RLA, 0x23, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0x24] = Opcode.init(OpcodeEnum.BIT, 0x24, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x25] = Opcode.init(OpcodeEnum.AND, 0x25, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x26] = Opcode.init(OpcodeEnum.ROL, 0x26, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x27] = Opcode.init(OpcodeEnum.RLA, 0x27, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x28] = Opcode.init(OpcodeEnum.PLP, 0x28, AddressingModeEnum.Implicit, 1, 4);
    opcodes[0x29] = Opcode.init(OpcodeEnum.AND, 0x29, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x2A] = Opcode.init(OpcodeEnum.ROL, 0x2A, AddressingModeEnum.Accumulator, 1, 2);
    opcodes[0x2B] = Opcode.init(OpcodeEnum.AAC, 0x2B, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x2C] = Opcode.init(OpcodeEnum.BIT, 0x2C, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x2D] = Opcode.init(OpcodeEnum.AND, 0x2D, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x2E] = Opcode.init(OpcodeEnum.ROL, 0x2E, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x2F] = Opcode.init(OpcodeEnum.RLA, 0x2F, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x30] = Opcode.init(OpcodeEnum.BMI, 0x30, AddressingModeEnum.Relative, 2, 2);
    opcodes[0x31] = Opcode.init(OpcodeEnum.AND, 0x31, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0x32] = Opcode.init(OpcodeEnum.KIL, 0x32, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x33] = Opcode.init(OpcodeEnum.RLA, 0x33, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0x34] = Opcode.init(OpcodeEnum.NOP, 0x34, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x35] = Opcode.init(OpcodeEnum.AND, 0x35, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x36] = Opcode.init(OpcodeEnum.ROL, 0x36, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x37] = Opcode.init(OpcodeEnum.RLA, 0x37, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x38] = Opcode.init(OpcodeEnum.SEC, 0x38, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x39] = Opcode.init(OpcodeEnum.AND, 0x39, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0x3A] = Opcode.init(OpcodeEnum.NOP, 0x3A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x3B] = Opcode.init(OpcodeEnum.RLA, 0x3B, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0x3C] = Opcode.init(OpcodeEnum.NOP, 0x3C, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x3D] = Opcode.init(OpcodeEnum.AND, 0x3D, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x3E] = Opcode.init(OpcodeEnum.ROL, 0x3E, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x3F] = Opcode.init(OpcodeEnum.RLA, 0x3F, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x40] = Opcode.init(OpcodeEnum.RTI, 0x40, AddressingModeEnum.Implicit, 1, 6);
    opcodes[0x41] = Opcode.init(OpcodeEnum.EOR, 0x41, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x42] = Opcode.init(OpcodeEnum.KIL, 0x42, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x43] = Opcode.init(OpcodeEnum.SRE, 0x43, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0x44] = Opcode.init(OpcodeEnum.NOP, 0x44, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x45] = Opcode.init(OpcodeEnum.EOR, 0x45, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x46] = Opcode.init(OpcodeEnum.LSR, 0x46, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x47] = Opcode.init(OpcodeEnum.SRE, 0x47, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x48] = Opcode.init(OpcodeEnum.PHA, 0x48, AddressingModeEnum.Implicit, 1, 3);
    opcodes[0x49] = Opcode.init(OpcodeEnum.EOR, 0x49, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x4A] = Opcode.init(OpcodeEnum.LSR, 0x4A, AddressingModeEnum.Accumulator, 1, 2);
    opcodes[0x4B] = Opcode.init(OpcodeEnum.ASR, 0x4B, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x4C] = Opcode.init(OpcodeEnum.JMP, 0x4C, AddressingModeEnum.Absolute, 3, 3);
    opcodes[0x4D] = Opcode.init(OpcodeEnum.EOR, 0x4D, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x4E] = Opcode.init(OpcodeEnum.LSR, 0x4E, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x4F] = Opcode.init(OpcodeEnum.SRE, 0x4F, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x50] = Opcode.init(OpcodeEnum.BVC, 0x50, AddressingModeEnum.Relative, 2, 2);
    opcodes[0x51] = Opcode.init(OpcodeEnum.EOR, 0x51, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0x52] = Opcode.init(OpcodeEnum.KIL, 0x52, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x53] = Opcode.init(OpcodeEnum.SRE, 0x53, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0x54] = Opcode.init(OpcodeEnum.NOP, 0x54, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x55] = Opcode.init(OpcodeEnum.EOR, 0x55, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x56] = Opcode.init(OpcodeEnum.LSR, 0x56, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x57] = Opcode.init(OpcodeEnum.SRE, 0x57, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x58] = Opcode.init(OpcodeEnum.CLI, 0x58, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x59] = Opcode.init(OpcodeEnum.EOR, 0x59, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0x5A] = Opcode.init(OpcodeEnum.NOP, 0x5A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x5B] = Opcode.init(OpcodeEnum.SRE, 0x5B, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0x5C] = Opcode.init(OpcodeEnum.NOP, 0x5C, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x5D] = Opcode.init(OpcodeEnum.EOR, 0x5D, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x5E] = Opcode.init(OpcodeEnum.LSR, 0x5E, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x5F] = Opcode.init(OpcodeEnum.SRE, 0x5F, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x60] = Opcode.init(OpcodeEnum.RTS, 0x60, AddressingModeEnum.Implicit, 1, 6);
    opcodes[0x61] = Opcode.init(OpcodeEnum.ADC, 0x61, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x62] = Opcode.init(OpcodeEnum.KIL, 0x62, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x63] = Opcode.init(OpcodeEnum.RRA, 0x63, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0x64] = Opcode.init(OpcodeEnum.NOP, 0x64, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x65] = Opcode.init(OpcodeEnum.ADC, 0x65, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x66] = Opcode.init(OpcodeEnum.ROR, 0x66, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x67] = Opcode.init(OpcodeEnum.RRA, 0x67, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0x68] = Opcode.init(OpcodeEnum.PLA, 0x68, AddressingModeEnum.Implicit, 1, 4);
    opcodes[0x69] = Opcode.init(OpcodeEnum.ADC, 0x69, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x6A] = Opcode.init(OpcodeEnum.ROR, 0x6A, AddressingModeEnum.Accumulator, 1, 2);
    opcodes[0x6B] = Opcode.init(OpcodeEnum.ARR, 0x6B, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x6C] = Opcode.init(OpcodeEnum.JMP, 0x6C, AddressingModeEnum.Indirect, 3, 5);
    opcodes[0x6D] = Opcode.init(OpcodeEnum.ADC, 0x6D, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x6E] = Opcode.init(OpcodeEnum.ROR, 0x6E, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x6F] = Opcode.init(OpcodeEnum.RRA, 0x6F, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0x70] = Opcode.init(OpcodeEnum.BVS, 0x70, AddressingModeEnum.Relative, 2, 2);
    opcodes[0x71] = Opcode.init(OpcodeEnum.ADC, 0x71, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0x72] = Opcode.init(OpcodeEnum.KIL, 0x72, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x73] = Opcode.init(OpcodeEnum.RRA, 0x73, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0x74] = Opcode.init(OpcodeEnum.NOP, 0x74, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x75] = Opcode.init(OpcodeEnum.ADC, 0x75, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x76] = Opcode.init(OpcodeEnum.ROR, 0x76, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x77] = Opcode.init(OpcodeEnum.RRA, 0x77, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0x78] = Opcode.init(OpcodeEnum.SEI, 0x78, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x79] = Opcode.init(OpcodeEnum.ADC, 0x79, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0x7A] = Opcode.init(OpcodeEnum.NOP, 0x7A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x7B] = Opcode.init(OpcodeEnum.RRA, 0x7B, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0x7C] = Opcode.init(OpcodeEnum.NOP, 0x7C, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x7D] = Opcode.init(OpcodeEnum.ADC, 0x7D, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0x7E] = Opcode.init(OpcodeEnum.ROR, 0x7E, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x7F] = Opcode.init(OpcodeEnum.RRA, 0x7F, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0x80] = Opcode.init(OpcodeEnum.NOP, 0x80, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x81] = Opcode.init(OpcodeEnum.STA, 0x81, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x82] = Opcode.init(OpcodeEnum.NOP, 0x82, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x83] = Opcode.init(OpcodeEnum.AAX, 0x83, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0x84] = Opcode.init(OpcodeEnum.STY, 0x84, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x85] = Opcode.init(OpcodeEnum.STA, 0x85, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x86] = Opcode.init(OpcodeEnum.STX, 0x86, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x87] = Opcode.init(OpcodeEnum.AAX, 0x87, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0x88] = Opcode.init(OpcodeEnum.DEY, 0x88, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x89] = Opcode.init(OpcodeEnum.NOP, 0x89, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x8A] = Opcode.init(OpcodeEnum.TXA, 0x8A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x8B] = Opcode.init(OpcodeEnum.XAA, 0x8B, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0x8C] = Opcode.init(OpcodeEnum.STY, 0x8C, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x8D] = Opcode.init(OpcodeEnum.STA, 0x8D, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x8E] = Opcode.init(OpcodeEnum.STX, 0x8E, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x8F] = Opcode.init(OpcodeEnum.AAX, 0x8F, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0x90] = Opcode.init(OpcodeEnum.BCC, 0x90, AddressingModeEnum.Relative, 2, 2);
    opcodes[0x91] = Opcode.init(OpcodeEnum.STA, 0x91, AddressingModeEnum.IndirectY, 2, 6);
    opcodes[0x92] = Opcode.init(OpcodeEnum.KIL, 0x92, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0x93] = Opcode.init(OpcodeEnum.AXA, 0x93, AddressingModeEnum.IndirectY, 2, 6);
    opcodes[0x94] = Opcode.init(OpcodeEnum.STY, 0x94, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x95] = Opcode.init(OpcodeEnum.STA, 0x95, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0x96] = Opcode.init(OpcodeEnum.STX, 0x96, AddressingModeEnum.ZeroPageY, 2, 4);
    opcodes[0x97] = Opcode.init(OpcodeEnum.AAX, 0x97, AddressingModeEnum.ZeroPageY, 2, 4);
    opcodes[0x98] = Opcode.init(OpcodeEnum.TYA, 0x98, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x99] = Opcode.init(OpcodeEnum.STA, 0x99, AddressingModeEnum.AbsoluteY, 3, 5);
    opcodes[0x9A] = Opcode.init(OpcodeEnum.TXS, 0x9A, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0x9B] = Opcode.init(OpcodeEnum.XAS, 0x9B, AddressingModeEnum.Immediate, 3, 5);
    opcodes[0x9C] = Opcode.init(OpcodeEnum.SYA, 0x9C, AddressingModeEnum.AbsoluteY, 3, 5);
    opcodes[0x9D] = Opcode.init(OpcodeEnum.STA, 0x9D, AddressingModeEnum.AbsoluteX, 3, 5);
    opcodes[0x9E] = Opcode.init(OpcodeEnum.SXA, 0x9E, AddressingModeEnum.AbsoluteY, 3, 5);
    opcodes[0x9F] = Opcode.init(OpcodeEnum.AXA, 0x9F, AddressingModeEnum.AbsoluteY, 3, 5);
    opcodes[0xA0] = Opcode.init(OpcodeEnum.LDY, 0xA0, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xA1] = Opcode.init(OpcodeEnum.LDA, 0xA1, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0xA2] = Opcode.init(OpcodeEnum.LDX, 0xA2, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xA3] = Opcode.init(OpcodeEnum.LAX, 0xA3, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0xA4] = Opcode.init(OpcodeEnum.LDY, 0xA4, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xA5] = Opcode.init(OpcodeEnum.LDA, 0xA5, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xA6] = Opcode.init(OpcodeEnum.LDX, 0xA6, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xA7] = Opcode.init(OpcodeEnum.LAX, 0xA7, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xA8] = Opcode.init(OpcodeEnum.TAY, 0xA8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xA9] = Opcode.init(OpcodeEnum.LDA, 0xA9, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xAA] = Opcode.init(OpcodeEnum.TAX, 0xAA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xAB] = Opcode.init(OpcodeEnum.ATX, 0xAB, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xAC] = Opcode.init(OpcodeEnum.LDY, 0xAC, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xAD] = Opcode.init(OpcodeEnum.LDA, 0xAD, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xAE] = Opcode.init(OpcodeEnum.LDX, 0xAE, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xAF] = Opcode.init(OpcodeEnum.LAX, 0xAF, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xB0] = Opcode.init(OpcodeEnum.BCS, 0xB0, AddressingModeEnum.Relative, 2, 2);
    opcodes[0xB1] = Opcode.init(OpcodeEnum.LDA, 0xB1, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0xB2] = Opcode.init(OpcodeEnum.KIL, 0xB2, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0xB3] = Opcode.init(OpcodeEnum.LAX, 0xB3, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0xB4] = Opcode.init(OpcodeEnum.LDY, 0xB4, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xB5] = Opcode.init(OpcodeEnum.LDA, 0xB5, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xB6] = Opcode.init(OpcodeEnum.LDX, 0xB6, AddressingModeEnum.ZeroPageY, 2, 4);
    opcodes[0xB7] = Opcode.init(OpcodeEnum.LAX, 0xB7, AddressingModeEnum.ZeroPageY, 2, 4);
    opcodes[0xB8] = Opcode.init(OpcodeEnum.CLV, 0xB8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xB9] = Opcode.init(OpcodeEnum.LDA, 0xB9, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xBA] = Opcode.init(OpcodeEnum.TSX, 0xBA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xBB] = Opcode.init(OpcodeEnum.LAR, 0xBB, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xBC] = Opcode.init(OpcodeEnum.LDY, 0xBC, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xBD] = Opcode.init(OpcodeEnum.LDA, 0xBD, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xBE] = Opcode.init(OpcodeEnum.LDX, 0xBE, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xBF] = Opcode.init(OpcodeEnum.LAX, 0xBF, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xC0] = Opcode.init(OpcodeEnum.CPY, 0xC0, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xC1] = Opcode.init(OpcodeEnum.CMP, 0xC1, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0xC2] = Opcode.init(OpcodeEnum.NOP, 0xC2, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xC3] = Opcode.init(OpcodeEnum.DCP, 0xC3, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0xC4] = Opcode.init(OpcodeEnum.CPY, 0xC4, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xC5] = Opcode.init(OpcodeEnum.CMP, 0xC5, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xC6] = Opcode.init(OpcodeEnum.DEC, 0xC6, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0xC7] = Opcode.init(OpcodeEnum.DCP, 0xC7, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0xC8] = Opcode.init(OpcodeEnum.INY, 0xC8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xC9] = Opcode.init(OpcodeEnum.CMP, 0xC9, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xCA] = Opcode.init(OpcodeEnum.DEX, 0xCA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xCB] = Opcode.init(OpcodeEnum.AXS, 0xCB, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xCC] = Opcode.init(OpcodeEnum.CPY, 0xCC, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xCD] = Opcode.init(OpcodeEnum.CMP, 0xCD, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xCE] = Opcode.init(OpcodeEnum.DEC, 0xCE, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0xCF] = Opcode.init(OpcodeEnum.DCP, 0xCF, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0xD0] = Opcode.init(OpcodeEnum.BNE, 0xD0, AddressingModeEnum.Relative, 2, 2);
    opcodes[0xD1] = Opcode.init(OpcodeEnum.CMP, 0xD1, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0xD2] = Opcode.init(OpcodeEnum.KIL, 0xD2, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0xD3] = Opcode.init(OpcodeEnum.DCP, 0xD3, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0xD4] = Opcode.init(OpcodeEnum.NOP, 0xD4, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xD5] = Opcode.init(OpcodeEnum.CMP, 0xD5, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xD6] = Opcode.init(OpcodeEnum.DEC, 0xD6, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0xD7] = Opcode.init(OpcodeEnum.DCP, 0xD7, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0xD8] = Opcode.init(OpcodeEnum.CLD, 0xD8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xD9] = Opcode.init(OpcodeEnum.CMP, 0xD9, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xDA] = Opcode.init(OpcodeEnum.NOP, 0xDA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xDB] = Opcode.init(OpcodeEnum.DCP, 0xDB, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0xDC] = Opcode.init(OpcodeEnum.NOP, 0xDC, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xDD] = Opcode.init(OpcodeEnum.CMP, 0xDD, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xDE] = Opcode.init(OpcodeEnum.DEC, 0xDE, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0xDF] = Opcode.init(OpcodeEnum.DCP, 0xDF, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0xE0] = Opcode.init(OpcodeEnum.CPX, 0xE0, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xE1] = Opcode.init(OpcodeEnum.SBC, 0xE1, AddressingModeEnum.IndirectX, 2, 6);
    opcodes[0xE2] = Opcode.init(OpcodeEnum.NOP, 0xE2, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xE3] = Opcode.init(OpcodeEnum.ISC, 0xE3, AddressingModeEnum.IndirectX, 2, 8);
    opcodes[0xE4] = Opcode.init(OpcodeEnum.CPX, 0xE4, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xE5] = Opcode.init(OpcodeEnum.SBC, 0xE5, AddressingModeEnum.ZeroPage, 2, 3);
    opcodes[0xE6] = Opcode.init(OpcodeEnum.INC, 0xE6, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0xE7] = Opcode.init(OpcodeEnum.ISC, 0xE7, AddressingModeEnum.ZeroPage, 2, 5);
    opcodes[0xE8] = Opcode.init(OpcodeEnum.INX, 0xE8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xE9] = Opcode.init(OpcodeEnum.SBC, 0xE9, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xEA] = Opcode.init(OpcodeEnum.NOP, 0xEA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xEB] = Opcode.init(OpcodeEnum.SBC, 0xEB, AddressingModeEnum.Immediate, 2, 2);
    opcodes[0xEC] = Opcode.init(OpcodeEnum.CPX, 0xEC, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xED] = Opcode.init(OpcodeEnum.SBC, 0xED, AddressingModeEnum.Absolute, 3, 4);
    opcodes[0xEE] = Opcode.init(OpcodeEnum.INC, 0xEE, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0xEF] = Opcode.init(OpcodeEnum.ISC, 0xEF, AddressingModeEnum.Absolute, 3, 6);
    opcodes[0xF0] = Opcode.init(OpcodeEnum.BEQ, 0xF0, AddressingModeEnum.Relative, 2, 2);
    opcodes[0xF1] = Opcode.init(OpcodeEnum.SBC, 0xF1, AddressingModeEnum.IndirectY, 2, 5);
    opcodes[0xF2] = Opcode.init(OpcodeEnum.KIL, 0xF2, AddressingModeEnum.Implicit, 1, 0);
    opcodes[0xF3] = Opcode.init(OpcodeEnum.ISC, 0xF3, AddressingModeEnum.IndirectY, 2, 8);
    opcodes[0xF4] = Opcode.init(OpcodeEnum.NOP, 0xF4, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xF5] = Opcode.init(OpcodeEnum.SBC, 0xF5, AddressingModeEnum.ZeroPageX, 2, 4);
    opcodes[0xF6] = Opcode.init(OpcodeEnum.INC, 0xF6, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0xF7] = Opcode.init(OpcodeEnum.ISC, 0xF7, AddressingModeEnum.ZeroPageX, 2, 6);
    opcodes[0xF8] = Opcode.init(OpcodeEnum.SED, 0xF8, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xF9] = Opcode.init(OpcodeEnum.SBC, 0xF9, AddressingModeEnum.AbsoluteY, 3, 4);
    opcodes[0xFA] = Opcode.init(OpcodeEnum.NOP, 0xFA, AddressingModeEnum.Implicit, 1, 2);
    opcodes[0xFB] = Opcode.init(OpcodeEnum.ISC, 0xFB, AddressingModeEnum.AbsoluteY, 3, 7);
    opcodes[0xFC] = Opcode.init(OpcodeEnum.NOP, 0xFC, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xFD] = Opcode.init(OpcodeEnum.SBC, 0xFD, AddressingModeEnum.AbsoluteX, 3, 4);
    opcodes[0xFE] = Opcode.init(OpcodeEnum.INC, 0xFE, AddressingModeEnum.AbsoluteX, 3, 7);
    opcodes[0xFF] = Opcode.init(OpcodeEnum.ISC, 0xFF, AddressingModeEnum.AbsoluteX, 3, 7);

    return opcodes;
}
